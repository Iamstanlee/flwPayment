[{"D:\\htmlprojects\\flutterwave\\jumga\\src\\index.js":"1","D:\\htmlprojects\\flutterwave\\jumga\\src\\App.js":"2","D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\store.js":"3","D:\\htmlprojects\\flutterwave\\jumga\\src\\serviceWorker.js":"4","D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\authentication\\auth-actions.js":"5","D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\authentication\\auth-slice.js":"6","D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\product\\product-slice.js":"7","D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\cart\\cart-slice.js":"8","D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\app\\app-slice.js":"9","D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\marketplace\\marketplace.js":"10","D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\home\\index.js":"11","D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\product\\index.js":"12","D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\cart\\index.js":"13","D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\authentication\\index.js":"14","D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\product\\product-actions.js":"15","D:\\htmlprojects\\flutterwave\\jumga\\src\\api\\firebase.js":"16","D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\cart\\cart.js":"17","D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\product\\product.js":"18","D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\authentication\\login.js":"19","D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\authentication\\reset-password.js":"20","D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\authentication\\sign-up.js":"21","D:\\htmlprojects\\flutterwave\\jumga\\src\\helpers\\index.js":"22","D:\\htmlprojects\\flutterwave\\jumga\\src\\components\\index.js":"23","D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\home\\home.js":"24","D:\\htmlprojects\\flutterwave\\jumga\\src\\firebase-config.js":"25","D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\cart\\cart-actions.js":"26","D:\\htmlprojects\\flutterwave\\jumga\\src\\helpers\\utils.js":"27","D:\\htmlprojects\\flutterwave\\jumga\\src\\components\\spacer.js":"28","D:\\htmlprojects\\flutterwave\\jumga\\src\\components\\avatar\\avatar.js":"29","D:\\htmlprojects\\flutterwave\\jumga\\src\\components\\alert\\alert.js":"30","D:\\htmlprojects\\flutterwave\\jumga\\src\\components\\navbar\\navbar.js":"31","D:\\htmlprojects\\flutterwave\\jumga\\src\\components\\payments\\payment-options.js":"32"},{"size":746,"mtime":1609517987939,"results":"33","hashOfConfig":"34"},{"size":1334,"mtime":1609773077283,"results":"35","hashOfConfig":"34"},{"size":412,"mtime":1609773079469,"results":"36","hashOfConfig":"34"},{"size":5141,"mtime":1609517988623,"results":"37","hashOfConfig":"34"},{"size":1543,"mtime":1609773078547,"results":"38","hashOfConfig":"34"},{"size":1802,"mtime":1609627443539,"results":"39","hashOfConfig":"34"},{"size":1345,"mtime":1609773079467,"results":"40","hashOfConfig":"34"},{"size":1853,"mtime":1609773078762,"results":"41","hashOfConfig":"34"},{"size":429,"mtime":1609773078386,"results":"42","hashOfConfig":"34"},{"size":2089,"mtime":1609773078048,"results":"43","hashOfConfig":"34"},{"size":48,"mtime":1609627443525,"results":"44","hashOfConfig":"34"},{"size":57,"mtime":1609627443530,"results":"45","hashOfConfig":"34"},{"size":48,"mtime":1609773077788,"results":"46","hashOfConfig":"34"},{"size":152,"mtime":1609517987995,"results":"47","hashOfConfig":"34"},{"size":910,"mtime":1609773078820,"results":"48","hashOfConfig":"34"},{"size":5109,"mtime":1609773077312,"results":"49","hashOfConfig":"34"},{"size":6057,"mtime":1609947476978,"results":"50","hashOfConfig":"34"},{"size":4861,"mtime":1609818667835,"results":"51","hashOfConfig":"34"},{"size":3830,"mtime":1609821165149,"results":"52","hashOfConfig":"34"},{"size":2507,"mtime":1609741493896,"results":"53","hashOfConfig":"34"},{"size":5133,"mtime":1609741525255,"results":"54","hashOfConfig":"34"},{"size":253,"mtime":1609773077569,"results":"55","hashOfConfig":"34"},{"size":205,"mtime":1609627443218,"results":"56","hashOfConfig":"34"},{"size":2711,"mtime":1609773077791,"results":"57","hashOfConfig":"34"},{"size":492,"mtime":1609517987862,"results":"58","hashOfConfig":"34"},{"size":1076,"mtime":1609773078758,"results":"59","hashOfConfig":"34"},{"size":1721,"mtime":1609773077628,"results":"60","hashOfConfig":"34"},{"size":162,"mtime":1609627443267,"results":"61","hashOfConfig":"34"},{"size":313,"mtime":1609517987235,"results":"62","hashOfConfig":"34"},{"size":760,"mtime":1609517987233,"results":"63","hashOfConfig":"34"},{"size":6174,"mtime":1609773077563,"results":"64","hashOfConfig":"34"},{"size":2240,"mtime":1609947839043,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"q47nxq",{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"68"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"68"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\htmlprojects\\flutterwave\\jumga\\src\\index.js",[],["141","142"],"D:\\htmlprojects\\flutterwave\\jumga\\src\\App.js",["143"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Route, Switch, Router } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Signup, Login, ResetPassword } from \"./pages/authentication\";\r\nimport { Home } from \"./pages/home\";\r\nimport { getUser } from \"./redux/authentication/auth-actions\";\r\nimport { Product } from \"./pages/product\";\r\nimport { Cart } from \"./pages/cart\";\r\nimport { getCart } from \"./redux/cart/cart-slice\";\r\nimport Marketplace from \"./pages/marketplace/marketplace\";\r\nexport const history = createBrowserHistory();\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getUser());\r\n    dispatch(getCart());\r\n  }, []);\r\n  return (\r\n    <div className=\"\">\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route path=\"/sign-up\" component={Signup} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/reset-password\" component={ResetPassword} />\r\n          <Route path=\"/cart\" component={Cart} />\r\n          <Route path=\"/vendors/:id/products/:id\" component={Product} />\r\n          <Route path=\"/vendors/:id\" component={Home} />\r\n          <Route path=\"/\" component={Marketplace} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\store.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\serviceWorker.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\authentication\\auth-actions.js",["144"],"import {\r\n  createUser,\r\n  passwordReset,\r\n  userLogin,\r\n  db,\r\n  auth,\r\n} from \"../../api/firebase\";\r\nimport { history } from \"../../App\";\r\nimport { getUrlParam } from \"../../helpers\";\r\nimport { getCart } from \"../cart/cart-slice\";\r\nimport {\r\n  getUserSuccess,\r\n  getUserFailed,\r\n  authActionStarted,\r\n  authSuccess,\r\n  resetPasswordSuccess,\r\n  resetPasswordFailed,\r\n  authFailed,\r\n} from \"./auth-slice\";\r\n\r\nexport const getUser = () => async (dispatch) => {\r\n  dispatch(authActionStarted());\r\n  auth.onAuthStateChanged(async (user) => {\r\n    if (user) {\r\n      try {\r\n        const res = await db.collection(\"users\").doc(user.uid).get();\r\n        const userMd = res.data();\r\n        dispatch(getUserSuccess(userMd));\r\n      } catch (err) {\r\n        dispatch(getUserFailed(err.message));\r\n      }\r\n    } else {\r\n      dispatch(getUserFailed(\"Error\"));\r\n    }\r\n  });\r\n};\r\n\r\nexport const authenticateUser = (user, authType) => async (dispatch) => {\r\n  dispatch(authActionStarted());\r\n  const res =\r\n    authType === \"login\"\r\n      ? await userLogin(user.email, user.password)\r\n      : await createUser(user);\r\n  if (res.err) {\r\n    dispatch(authFailed(res.err.message));\r\n  } else {\r\n    dispatch(authSuccess(res.user));\r\n    history.push(getUrlParam(\"from\"));\r\n  }\r\n};\r\n\r\nexport const resetPassword = (email) => async (dispatch) => {\r\n  dispatch(authActionStarted());\r\n  const res = await passwordReset(email);\r\n  if (res.err) {\r\n    dispatch(resetPasswordFailed(res.err.message));\r\n  } else {\r\n    dispatch(resetPasswordSuccess());\r\n  }\r\n};\r\n","D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\authentication\\auth-slice.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\product\\product-slice.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\cart\\cart-slice.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\app\\app-slice.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\marketplace\\marketplace.js",["145"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { history } from \"../../App\";\r\nimport { NavigationBar, Spacer } from \"../../components\";\r\nimport { selectUser } from \"../../redux/authentication/auth-slice\";\r\nimport { selectCartTotal } from \"../../redux/cart/cart-slice\";\r\nimport { getShops } from \"../../redux/product/product-actions\";\r\nimport {\r\n  getCurrentVendor,\r\n  selectProduct,\r\n} from \"../../redux/product/product-slice\";\r\n\r\n// new shops would use camelCase\r\n// pipe the shops through cart shops to get the quantity\r\nfunction Marketplace() {\r\n  const dispatch = useDispatch();\r\n  const product = useSelector(selectProduct);\r\n  const user = useSelector(selectUser);\r\n  const total = useSelector(selectCartTotal);\r\n\r\n  useEffect(() => {\r\n    // just get shops once okayy\r\n    if (!product.shops) {\r\n      dispatch(getShops());\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <NavigationBar user={user} totalInCart={total} />\r\n      <Spacer top=\"50px\" />\r\n      {product.isLoading && <center>LOADING...</center>}\r\n      {product.error && (\r\n        <center style={{ color: \"red\" }}>{product.message}</center>\r\n      )}\r\n      {product.shops &&\r\n        product.shops.map((shop) => {\r\n          return (\r\n            <center key={shop.shopId}>\r\n              <div\r\n                onClick={() => {\r\n                  dispatch(getCurrentVendor(shop));\r\n                  history.push(`/vendors/${shop.shopId}`);\r\n                }}\r\n                style={{\r\n                  border: \"1px solid grey\",\r\n                  maxWidth: \"400px\",\r\n                  margin: \"10px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                <center style={{ fontWeight: \"bold\" }}>{shop.title}</center>\r\n                <center>{shop.description}</center>\r\n                <center style={{ color: \"green\" }}>\r\n                  {shop.tags.join(\" \")}\r\n                </center>\r\n              </div>\r\n            </center>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Marketplace;\r\n","D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\home\\index.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\product\\index.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\cart\\index.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\authentication\\index.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\product\\product-actions.js",["146"],"import { fetchProducts, fetchShops } from \"../../api/firebase\";\r\nimport {\r\n  getProductsFailed,\r\n  getProductInit,\r\n  getProductsSuccess,\r\n  getCurrentVendor,\r\n  getShopsFailed,\r\n  getShopsSuccess,\r\n} from \"./product-slice\";\r\n\r\nexport const getProducts = () => async (dispatch) => {\r\n  dispatch(getProductInit());\r\n  const products = await fetchProducts();\r\n  if (products.err) {\r\n    dispatch(getProductsFailed(products.err.message));\r\n  } else {\r\n    dispatch(getProductsSuccess(products.products));\r\n  }\r\n};\r\nexport const getShops = () => async (dispatch) => {\r\n  dispatch(getProductInit());\r\n  const shops = await fetchShops();\r\n  if (shops.err) {\r\n    dispatch(getShopsFailed(shops.err.message));\r\n  } else {\r\n    dispatch(getShopsSuccess(shops.shops));\r\n  }\r\n};\r\n\r\n// export const getProductById = async (productId) => {\r\n// };\r\n// export const getProductShop = (shopId) => async (dispatch) => {\r\n// };\r\n","D:\\htmlprojects\\flutterwave\\jumga\\src\\api\\firebase.js",["147"],"import firebase from \"../firebase-config\";\r\n\r\nexport const db = firebase.firestore();\r\nexport const storage = firebase.storage();\r\nexport const auth = firebase.auth();\r\nexport const user = auth.currentUser;\r\n\r\nexport const getTimestamp = (date) => {\r\n  if (date) return firebase.firestore.Timestamp.fromDate(date);\r\n  else return firebase.firestore.Timestamp.fromDate(new Date());\r\n};\r\n\r\nexport const getIncrement = (number) => {\r\n  return firebase.firestore.FieldValue.increment(number);\r\n};\r\n\r\nexport const firebaseObject = () => {\r\n  return firebase;\r\n};\r\n\r\nexport const getGeoLatitude = (latitude, longitude) => {\r\n  return new firebase.firestore.GeoPoint(latitude, longitude);\r\n};\r\n\r\nexport const fetchUser = async () => {\r\n  const user = auth.currentUser;\r\n  try {\r\n    if (user !== null) {\r\n      const res = await db.collection(\"users\").doc(user.uid).get();\r\n      return { err: null, user: res.data() };\r\n    } else {\r\n      return { err: { message: \"Error\" } };\r\n    }\r\n  } catch (e) {\r\n    return { err: e, user: null };\r\n  }\r\n};\r\nexport const userLogin = async (email, password) => {\r\n  try {\r\n    await auth.signInWithEmailAndPassword(email, password);\r\n    return await fetchUser();\r\n  } catch (e) {\r\n    return { err: e, user: null };\r\n  }\r\n};\r\n\r\nexport const userLogout = async () => {\r\n  await auth.signOut();\r\n};\r\n\r\nexport const createUser = async (user) => {\r\n  try {\r\n    const res = await auth.createUserWithEmailAndPassword(\r\n      user.email,\r\n      user.password\r\n    );\r\n    const userModel = {\r\n      email: user.email,\r\n      fullname: user.fullname,\r\n      country: user.country,\r\n      isMerchant: false,\r\n      user_id: res.user.uid,\r\n      wallet_balance: 0.0,\r\n      cart: [],\r\n      shipping_address: {},\r\n    };\r\n    await db.collection(\"users\").doc(res.user.uid).set(userModel);\r\n    return { user: userModel };\r\n  } catch (e) {\r\n    // await auth.currentUser.delete();\r\n    return { err: e, user: null };\r\n  }\r\n};\r\n\r\nexport const passwordReset = async (email) => {\r\n  try {\r\n    await auth.sendPasswordResetEmail(email);\r\n    return {};\r\n  } catch (e) {\r\n    return { err: e };\r\n  }\r\n};\r\n\r\n// SHOP API\r\nexport const fetchShops = async () => {\r\n  try {\r\n    const res = await db.collection(\"shops\").get();\r\n    const shops = res.docs.map((p) => p.data());\r\n    return { err: null, shops: shops };\r\n  } catch (e) {\r\n    return { err: e };\r\n  }\r\n};\r\n\r\nexport const fetchShopById = async (id) => {\r\n  try {\r\n    const shop = await (await db.collection(\"shops\").doc(id).get()).data();\r\n    const dispatcher = await (\r\n      await db.collection(\"dispatchers\").doc(shop.shopId).get()\r\n    ).data();\r\n    const shopMd = { ...shop, dispatcher: dispatcher };\r\n    return shopMd;\r\n  } catch (e) {\r\n    return { err: e };\r\n  }\r\n};\r\n\r\n//  PRODUCTS API\r\n\r\nexport const fetchProducts = async () => {\r\n  try {\r\n    const res = await db.collection(\"products\").get();\r\n    const products = res.docs.map((p) => {\r\n      return { ...p.data(), quantity: 0 };\r\n    });\r\n    return { err: null, products: products };\r\n  } catch (e) {\r\n    return { err: e };\r\n  }\r\n};\r\n\r\nexport const fetchProductById = async (id) => {\r\n  try {\r\n    const product = await (\r\n      await db.collection(\"products\").doc(id).get()\r\n    ).data();\r\n    const shop = await (\r\n      await db.collection(\"shops\").doc(product.shop_id).get()\r\n    ).data();\r\n    const productMd = { ...product, shop: shop };\r\n    return productMd;\r\n  } catch (e) {\r\n    return { err: e };\r\n  }\r\n};\r\n\r\n// STORAGE API\r\n\r\nexport const uploadOneFile = async (file, folderPath, name) => {\r\n  try {\r\n    let fileType = file.name.split(\".\");\r\n    let filename = folderPath + name || \"\" + \".\" + fileType[1];\r\n    filename = filename.replace(/\\s/g, \"\").trim();\r\n\r\n    let fileRef = storage.ref().child(filename);\r\n    await fileRef.put(file);\r\n    let url = await fileRef.getDownloadURL();\r\n    return { err: null, url };\r\n  } catch (e) {\r\n    console.log(e);\r\n    return { err: e };\r\n  }\r\n};\r\n\r\nexport const getResizedImageUrl = async (file, folderPath, name, locId) => {\r\n  try {\r\n    let fileType = file.name.split(\".\");\r\n    let filename = folderPath + name + \".\" + fileType[1];\r\n    filename = filename.replace(/\\s/g, \"\").trim();\r\n    let filenameArray = filename.split(\".\");\r\n\r\n    if (Array.isArray(fileType)) {\r\n      setTimeout(async () => {\r\n        filename = filenameArray[0] + \"_350x250\"; //+ '.' + filenameArray[1];\r\n        let fileRef = storage.ref().child(filename.trim());\r\n        let url = await fileRef.getDownloadURL();\r\n\r\n        await db\r\n          .collection(\"locations\")\r\n          .doc(locId)\r\n          .update({\r\n            resizedImages: firebase.firestore.FieldValue.arrayUnion(url),\r\n          });\r\n        return { err: null, url };\r\n      }, 6500);\r\n    }\r\n    return { err: \"Cannot get filename array\" };\r\n  } catch (e) {\r\n    console.log(e);\r\n    return { err: e };\r\n  }\r\n};\r\n\r\nexport const deleteFile = async (filePath) => {\r\n  try {\r\n    let fileRef = storage.ref().child(filePath);\r\n    await fileRef.delete();\r\n    return { err: null };\r\n  } catch (e) {\r\n    console.log(e);\r\n    return { err: e };\r\n  }\r\n};\r\n","D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\cart\\cart.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\product\\product.js",["148","149","150"],"import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { fetchProductById } from \"../../api/firebase\";\r\nimport { history } from \"../../App\";\r\nimport { NavigationBar, Spacer } from \"../../components\";\r\nimport { getLastPathname } from \"../../helpers\";\r\nimport { selectUser } from \"../../redux/authentication/auth-slice\";\r\nimport { addItemToCart, cartPipeline } from \"../../redux/cart/cart-actions\";\r\nimport { selectCart, selectCartTotal } from \"../../redux/cart/cart-slice\";\r\n\r\n// new products would use camelCase\r\nfunction Product() {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const cart = useSelector(selectCart);\r\n  const user = useSelector(selectUser);\r\n  const total = useSelector(selectCartTotal);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(false);\r\n  const [product, setProduct] = useState({});\r\n\r\n  useEffect(() => {\r\n    getProduct();\r\n  }, []);\r\n\r\n  const getProduct = async () => {\r\n    setLoading(true);\r\n    const product = await fetchProductById(getLastPathname(location.pathname));\r\n    if (product.err) {\r\n      setError(true);\r\n    } else {\r\n      // pipe through cart list to get quantity\r\n      setProduct(cartPipeline(cart.cart, product));\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const handleProductQuantity = (action) => {\r\n    switch (action) {\r\n      case \"add\":\r\n        if (product.quantity < product.quantities_available) {\r\n          let p = { ...product };\r\n          p.quantity++;\r\n          setProduct(p);\r\n        }\r\n        break;\r\n      case \"remove\":\r\n        if (product.quantity > 0) {\r\n          let p = { ...product };\r\n          p.quantity--;\r\n          setProduct(p);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <NavigationBar user={user} totalInCart={total} />\r\n      {/* <Spacer top=\"50px\" /> */}\r\n      <center>{cart.isLoading && `${cart.message}`}</center>\r\n      <div>\r\n        {!product.shop && loading && <center>Loading Product</center>}\r\n        {product && !product.shop && error && (\r\n          <center>\r\n            Something went wrong, It's not you, it's us, Try again.\r\n          </center>\r\n        )}\r\n        {product && product.shop && !loading && (\r\n          <div className=\"h-full md:h-screen w-full\">\r\n            <div className=\"h-full w-full flex flex-col md:flex-row items-start overflow-auto\">\r\n              <div className=\"h-full flex items-center justify-center w-full md:w-1/2 py-8 px-4\">\r\n                <img className=\"w-1/2\" src={product.images} alt={product.title} />\r\n              </div>\r\n              <div className=\"w-full md:w-1/2 h-full bg-gray-800 text-white text-left\" >\r\n                <div className=\"p-9 w-full h-full flex flex-col justify-center\">\r\n                  <p className=\"text-3xl font-semibold py-3\">{product.title}</p>\r\n                  <div className=\"flex items-center w-full py-3 justify-between\">\r\n                    <p className=\"text-xl font-medium\">NGN {product.price_ngn}</p>\r\n                    <p className=\"bg-green-400 px-2 text-white rounded-full py-1\">\r\n                      {product.quantities_available} in stock\r\n                  </p>\r\n                  </div>\r\n                  <div className=\"py-3 flex items-start flex-col\">\r\n                    <p className=\"pb-0.5 mb-1.5 font-semibold border-solid border-b-2 border-green-400\">DESCRIPTION</p>\r\n                    <p>{product.description}</p>\r\n                  </div>\r\n                  <div className=\"flex items-center justify-center bg-black rounded-full p-1 my-3 w-24\">\r\n                    <span\r\n                      className=\"font-bold cursor-pointer px-2\"\r\n                      onClick={() => handleProductQuantity(\"remove\")}\r\n                    >-</span>\r\n                    <span className=\"font-bold px-2\">\r\n                      {product.quantity}\r\n                    </span>\r\n                    <span\r\n                      onClick={() => handleProductQuantity(\"add\")}\r\n                      className=\"font-bold cursor-pointer px-2\"\r\n                    >+</span>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <button\r\n                      onClick={() => {\r\n                        if (product.quantity > 0)\r\n                          dispatch(addItemToCart(product, cart.cart));\r\n                      }}\r\n                      className=\"border-solid border-2 border-green-400 w-full rounded-full py-1.5 my-1.5\"\r\n                    >\r\n                      Add To Cart\r\n              </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Product;\r\n","D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\authentication\\login.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\authentication\\reset-password.js",["151"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Alert } from \"../../components\";\r\nimport { resetPassword } from \"../../redux/authentication/auth-actions\";\r\nimport { authReset, selectAuth } from \"../../redux/authentication/auth-slice\";\r\nimport waves from \"../../assets/images/waves.svg\"\r\nimport loginImg from \"../../assets/images/loginImg.jpg\"\r\n\r\n\r\nexport default function ResetPassword(props) {\r\n  const auth = useSelector(selectAuth);\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(null);\r\n  return (\r\n    <div className=\"relative h-screen w-full sssss\">\r\n      <div className=\"hidden sm:block w-1/2 h-full\">\r\n        <div className=\"h-full bg-no-repeat bg-center bg-cover\" style={{ backgroundImage: `url(${loginImg})` }}></div>\r\n      </div>\r\n      <div className=\"w-full sm:w-1/2 absolute right-0 top-0 bg-white h-full\" >\r\n        <div className=\"p-9 w-full h-full relative flex flex-col items-center justify-center text-center\">\r\n          <div className=\"w-full absolute custom-shape-divider-top-1609595750\">\r\n            <img className=\"transform rotate-90\" src={waves} />\r\n          </div>\r\n\r\n          <div className=\"py-8\">\r\n            <h2 className=\"text-4xl\">Reset Your Password</h2>\r\n            <p className=\"text-gray-500 py-1\">Enter your email to continue</p>\r\n          </div>\r\n          <form\r\n            className=\"flex flex-col justify-center items-center w-5/6\"\r\n            onSubmit={(event) => {\r\n              event.preventDefault();\r\n              dispatch(resetPassword(email));\r\n            }}\r\n          >\r\n            <p>{auth.isLoading && \"Please wait\"}</p>\r\n            {auth.error && (\r\n              <Alert label={auth.message} callback={() => dispatch(authReset())} />\r\n            )}\r\n            {auth.message && <small>{auth.message}</small>}\r\n            <input\r\n              className=\"w-full border-solid border-b-2 border-gray-400 p-2 my-3 focus:outline-none\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email Address\"\r\n              onChange={(event) => {\r\n                event.persist();\r\n                setEmail(event.target.value);\r\n              }}\r\n            ></input>\r\n            <button\r\n              className=\"w-24 bg-green-400 p-2 my-3 rounded-full text-white focus:outline-none\"\r\n              type=\"submit\">\r\n              RESET\r\n        </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\authentication\\sign-up.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\helpers\\index.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\components\\index.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\pages\\home\\home.js",["152"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { history } from \"../../App\";\r\nimport { NavigationBar, Spacer } from \"../../components\";\r\nimport { selectUser } from \"../../redux/authentication/auth-slice\";\r\nimport { selectCartTotal } from \"../../redux/cart/cart-slice\";\r\nimport { getProducts } from \"../../redux/product/product-actions\";\r\nimport { selectProduct } from \"../../redux/product/product-slice\";\r\n\r\n// new products would use camelCase\r\n// pipe the products through cart products to get the quantity\r\nfunction Home() {\r\n  const dispatch = useDispatch();\r\n  const product = useSelector(selectProduct);\r\n  const user = useSelector(selectUser);\r\n  const total = useSelector(selectCartTotal);\r\n\r\n  useEffect(() => {\r\n    // just get products once okayy\r\n    if (!product.products) {\r\n      dispatch(getProducts());\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <NavigationBar user={user} totalInCart={total} />\r\n      <Spacer top=\"50px\" />\r\n      {product.isLoading && <center>LOADING...</center>}\r\n      {product.error && (\r\n        <center style={{ color: \"red\" }}>{product.message}</center>\r\n      )}\r\n      <div className=\"flex flex-wrap p-5 w-full\">\r\n        {product.products &&\r\n          product.products.map((product) => {\r\n            return (\r\n              <div\r\n                key={product.product_id}\r\n                className=\"text-center w-1/3 sm:2/5 mx:w-1/4 lg:w-1/5 py-3 px-2 m-3 rounded-lg shadow-lg cursor-pointer bg-white\"\r\n              >\r\n                <div\r\n                  className=\"flex flex-col items-center justify-between h-full\"\r\n                  onClick={() => {\r\n                    history.push(\r\n                      `/vendors/${product.shop_id}/products/${product.product_id}`\r\n                    );\r\n                  }}\r\n                >\r\n                  <div className=\"w-20\">\r\n                    <img\r\n                      className=\"w-full\"\r\n                      src={product.images}\r\n                      alt={product.title}\r\n                    />\r\n                  </div>\r\n                  <p className=\"font-bold pt-10 pb-7\">{product.title}</p>\r\n                  <div className=\"flex justify-between items-center w-full\">\r\n                    <p>NGN {product.price_ngn}</p>\r\n                    <p className=\"bg-green-400 py-1 px-2 text-white rounded-full\">\r\n                      {/* {product.quantitiesAvailable} in stock */}\r\n                      {product.quantities_available} in stock\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","D:\\htmlprojects\\flutterwave\\jumga\\src\\firebase-config.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\redux\\cart\\cart-actions.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\helpers\\utils.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\components\\spacer.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\components\\avatar\\avatar.js",[],"D:\\htmlprojects\\flutterwave\\jumga\\src\\components\\alert\\alert.js",["153","154"],"import { useEffect, useState } from \"react\";\r\n\r\nexport default function Alert({ type, label, callback }) {\r\n  const [hidden, setHidden] = useState(false);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setHidden(true);\r\n      callback();\r\n    }, 3000);\r\n  }, []);\r\n  let style = { color2: \"red\", color1: \"rgb(253, 219, 219)\" };\r\n  switch (type) {\r\n    case \"success\":\r\n      style.color1 = \"greenAccent\";\r\n      style.color2 = \"green\";\r\n    case \"error\":\r\n    default:\r\n  }\r\n  return (\r\n    <div\r\n      className={hidden && `hidden`}\r\n      style={{\r\n        padding: \"4px 10px\",\r\n        backgroundColor: style.color1,\r\n        boxSizing: \"border-box\",\r\n      }}\r\n    >\r\n      <small style={{ color: style.color2 }}>{label}</small>\r\n    </div>\r\n  );\r\n}\r\n","D:\\htmlprojects\\flutterwave\\jumga\\src\\components\\navbar\\navbar.js",["155","156","157","158","159","160","161","162"],"import React from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport Avatar from \"../avatar/avatar\";\r\n\r\nfunction NavigationBar(props) {\r\n  const location = useLocation();\r\n  return (\r\n    <nav className=\"bg-gray-800\">\r\n      <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\r\n        <div className=\"relative flex items-center justify-between h-16\">\r\n          <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\r\n            <button\r\n              className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              <span className=\"sr-only\">Open main menu</span>\r\n              <svg\r\n                className=\"block h-6 w-6\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n                aria-hidden=\"true\"\r\n              >\r\n                <path\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\"\r\n                  stroke-width=\"2\"\r\n                  d=\"M4 6h16M4 12h16M4 18h16\"\r\n                />\r\n              </svg>\r\n              <svg\r\n                className=\"hidden h-6 w-6\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n                aria-hidden=\"true\"\r\n              >\r\n                <path\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\"\r\n                  stroke-width=\"2\"\r\n                  d=\"M6 18L18 6M6 6l12 12\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n          <div className=\"flex sm:items-stretch sm:justify-start\">\r\n            <div className=\"flex-shrink-0 flex items-center\">\r\n              <span\r\n                className=\"text-white items-center\"\r\n                style={{ fontFamily: \"Pacifico\", fontSize: \"22px\" }}\r\n              >\r\n                <Link to=\"/\">Jumga</Link>\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\r\n            <div className=\"flex items-center justify-end space-x-4\">\r\n              <a\r\n                href=\"#\"\r\n                className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\r\n              >\r\n                Sell\r\n              </a>\r\n              <a\r\n                href=\"#\"\r\n                className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\r\n              >\r\n                <Link\r\n                  to={`/cart`}\r\n                  className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\r\n                >\r\n                  Cart\r\n                  <span>({props.totalInCart})</span>\r\n                </Link>\r\n              </a>\r\n              <Link\r\n                to={`/login?from=${location.pathname}`}\r\n                className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\r\n              >\r\n                {props.user ? props.user.email : \"Login\"}\r\n              </Link>\r\n            </div>\r\n            <button className=\"bg-gray-800 p-1 mr-4 rounded-full text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\">\r\n              <Avatar />\r\n            </button>\r\n            <div className=\"ml-3 relative\">\r\n              <div\r\n                className={`hidden origin-top-right absolute right-0 mt-4 w-36 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5`}\r\n                role=\"menu\"\r\n                aria-orientation=\"vertical\"\r\n                aria-labelledby=\"user-menu\"\r\n              >\r\n                <a\r\n                  href=\"#\"\r\n                  className=\"block text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                  role=\"menuitem\"\r\n                >\r\n                  Account\r\n                </a>\r\n                <a\r\n                  href=\"#\"\r\n                  className=\"block text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\"\r\n                  role=\"menuitem\"\r\n                >\r\n                  Sign out\r\n                </a>\r\n                <a\r\n                  href=\"#\"\r\n                  className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\r\n                >\r\n                  Cart\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"hidden sm:hidden\">\r\n        <div className=\"px-2 pt-2 pb-3 space-y-1\">\r\n          <a\r\n            href=\"#\"\r\n            className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\r\n          >\r\n            Sell\r\n          </a>\r\n          <a\r\n            href=\"#\"\r\n            className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\r\n          >\r\n            <Link\r\n              to={`/cart`}\r\n              className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\r\n            >\r\n              Cart\r\n              <span>({props.totalInCart})</span>\r\n            </Link>\r\n          </a>\r\n          <a\r\n            href=\"#\"\r\n            className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\r\n          >\r\n            <Link\r\n              to={`/login?from=${location.pathname}`}\r\n              className=\"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-sm font-medium\"\r\n            >\r\n              {props.user ? props.user.email : \"Login\"}\r\n            </Link>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavigationBar;\r\n","D:\\htmlprojects\\flutterwave\\jumga\\src\\components\\payments\\payment-options.js",[],{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","replacedBy":"166"},{"ruleId":"167","severity":1,"message":"168","line":19,"column":6,"nodeType":"169","endLine":19,"endColumn":8,"suggestions":"170"},{"ruleId":"171","severity":1,"message":"172","line":10,"column":10,"nodeType":"173","messageId":"174","endLine":10,"endColumn":17},{"ruleId":"167","severity":1,"message":"175","line":26,"column":6,"nodeType":"169","endLine":26,"endColumn":8,"suggestions":"176"},{"ruleId":"171","severity":1,"message":"177","line":6,"column":3,"nodeType":"173","messageId":"174","endLine":6,"endColumn":19},{"ruleId":"178","severity":1,"message":"179","line":142,"column":44,"nodeType":"180","messageId":"181","endLine":142,"endColumn":45},{"ruleId":"171","severity":1,"message":"182","line":5,"column":10,"nodeType":"173","messageId":"174","endLine":5,"endColumn":17},{"ruleId":"171","severity":1,"message":"183","line":6,"column":25,"nodeType":"173","messageId":"174","endLine":6,"endColumn":31},{"ruleId":"167","severity":1,"message":"184","line":26,"column":6,"nodeType":"169","endLine":26,"endColumn":8,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":22,"column":13,"nodeType":"188","endLine":22,"endColumn":64},{"ruleId":"167","severity":1,"message":"189","line":23,"column":6,"nodeType":"169","endLine":23,"endColumn":8,"suggestions":"190"},{"ruleId":"167","severity":1,"message":"191","line":10,"column":6,"nodeType":"169","endLine":10,"endColumn":8,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":16,"column":5,"nodeType":"195","messageId":"196","endLine":16,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":61,"column":15,"nodeType":"188","endLine":64,"endColumn":16},{"ruleId":"197","severity":1,"message":"198","line":67,"column":15,"nodeType":"188","endLine":70,"endColumn":16},{"ruleId":"197","severity":1,"message":"198","line":96,"column":17,"nodeType":"188","endLine":100,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":103,"column":17,"nodeType":"188","endLine":107,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":110,"column":17,"nodeType":"188","endLine":113,"endColumn":18},{"ruleId":"197","severity":1,"message":"198","line":123,"column":11,"nodeType":"188","endLine":126,"endColumn":12},{"ruleId":"197","severity":1,"message":"198","line":129,"column":11,"nodeType":"188","endLine":132,"endColumn":12},{"ruleId":"197","severity":1,"message":"198","line":141,"column":11,"nodeType":"188","endLine":144,"endColumn":12},"no-native-reassign",["199"],"no-negated-in-lhs",["200"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["201"],"no-unused-vars","'getCart' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'dispatch' and 'product.shops'. Either include them or remove the dependency array.",["202"],"'getCurrentVendor' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'history' is defined but never used.","'Spacer' is defined but never used.","React Hook useEffect has a missing dependency: 'getProduct'. Either include it or remove the dependency array.",["203"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'product.products'. Either include them or remove the dependency array.",["204"],"React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["205"],"no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"206","fix":"207"},{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},"Update the dependencies array to be: [dispatch]",{"range":"216","text":"217"},"Update the dependencies array to be: [dispatch, product.shops]",{"range":"218","text":"219"},"Update the dependencies array to be: [getProduct]",{"range":"220","text":"221"},"Update the dependencies array to be: [dispatch, product.products]",{"range":"222","text":"223"},"Update the dependencies array to be: [callback]",{"range":"224","text":"225"},[744,746],"[dispatch]",[904,906],"[dispatch, product.shops]",[1037,1039],"[getProduct]",[892,894],"[dispatch, product.products]",[264,266],"[callback]"]